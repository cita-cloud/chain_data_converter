
name: Build Docker Images

on:
  push:
    branches:
      - master
      - main
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    name: "Build Image"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Login to Harbor
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.DOCKER_REGISTRY_ADDRESS }}
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_REGISTRY_ADDRESS }}/cita-cloud/converter:lastest

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     defaults:
#       run:
#         shell: bash
#     steps:
#       - name: "Checking out code"
#         uses: actions/checkout@v2
#         with:
#           submodules: recursive
#       - name: "Login to DockerHub"
#         uses: docker/login-action@v2
#         with:
#           registry: ${{ secrets.DOCKER_REGISTRY_ADDRESS }}
#           username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
#           password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
#       - name: "Set up QEMU"
#         uses: docker/setup-qemu-action@v1
#         with:
#           image: tonistiigi/binfmt:master
#       - name: "Set up Docker Buildx"
#         uses: docker/setup-buildx-action@v1
#       - name: "Building docker images"
#         run: |
#           image="${{ secrets.DOCKER_REGISTRY_ADDRESS }}/cita-cloud/$(basename ${GITHUB_REPOSITORY})"
#           tag=${GITHUB_REF#refs/heads/}
#           if [ "$tag" = 'master' ] || [ "$tag" = 'main' ]; then
#               tag=latest
#           fi

#           docker buildx build \
#               --output "type=image,push=true" \
#               --file "Dockerfile" \
#               --tag "${image}:${tag}" \
#               --platform "linux/amd64" \
#               "."
